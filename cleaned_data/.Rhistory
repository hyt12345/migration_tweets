who_post[[i]] = gsub("(RT @|via @)", "", poster, ignore.case=TRUE)
# name of retweeting user
who_retweet[[i]] = rep(twit$user.screen_name, length(poster))
# retweeted text
rt_tweet[[i]] = twit$text
}
setwd("~/Dropbox/gh_projects/migration_tweets")
load("cleaned_data/complete.RData")
require(stringr)
require(igraph)
Sys.setlocale(locale="C")
require(lubridate)
df$time<-as.POSIXct(dmy_hms(substr(df$created_at, 6, 25)))
df<-df[with(df, order(time)), ]
per1<-df[month(df$time) == 10,]
per2<-df[month(df$time) == 11,]
per3<-df[month(df$time) == 12,]
per4<-df[month(df$time) == 01,]
per5<-df[month(df$time) == 02,]
# Let's Identify retweets
# regular expressions to find retweets
grep("(RT|via)((?:\\b\\W*@\\w+)+)", df$text,
ignore.case=TRUE, value=TRUE)
##### Network Snapshot 1
# which tweets are retweets
rt_patterns = grep("(RT|via)((?:\\b\\W*@\\w+)+)",
per1$text, ignore.case=TRUE)
# Collect who retweeted and who posted
# We'll use these results to form an edge list in order to create the graph
# create list to store user names
who_retweet = as.list(1:length(rt_patterns))
who_post = as.list(1:length(rt_patterns))
rt_tweet = as.list(1:length(rt_patterns))
# for loop
for (i in 1:length(rt_patterns))
{
# get tweet with retweet entity
twit = per1[rt_patterns[i],]
# get retweet source
poster = str_extract_all(twit$text,
"(RT|via)((?:\\b\\W*@\\w+)+)")
#remove ':'
poster = gsub(":", "", unlist(poster))
# name of retweeted user
who_post[[i]] = gsub("(RT @|via @)", "", poster, ignore.case=TRUE)
# name of retweeting user
who_retweet[[i]] = rep(twit$user.screen_name, length(poster))
# retweeted text
rt_tweet[[i]] = twit$text
}
who_post = unlist(who_post)
who_retweet = unlist(who_retweet)
rt_tweet = unlist(rt_tweet)
retweeter_poster = cbind(who_retweet, who_post, rt_tweet)
retweeter_poster = cbind(who_retweet, who_post)
el.df1<-as.data.frame(retweeter_poster)
el.df1<-el.df1[order(el.df1$who_post),]
el.df1<-el.df1[-grep(" ", el.df1$who_post),]  # remove RTs of multiples
rownames(el.df1)<-NULL
setwd("~/Dropbox/gh_projects/migration_tweets")
load("cleaned_data/complete.RData")
require(stringr)
require(igraph)
Sys.setlocale(locale="C")
require(lubridate)
df$time<-as.POSIXct(dmy_hms(substr(df$created_at, 6, 25)))
df<-df[with(df, order(time)), ]
per1<-df[month(df$time) == 10,]
per2<-df[month(df$time) == 11,]
per3<-df[month(df$time) == 12,]
per4<-df[month(df$time) == 01,]
per5<-df[month(df$time) == 02,]
# Let's Identify retweets
# regular expressions to find retweets
grep("(RT|via)((?:\\b\\W*@\\w+)+)", df$text,
ignore.case=TRUE, value=TRUE)
##### Network Snapshot 1
# which tweets are retweets
rt_patterns = grep("(RT|via)((?:\\b\\W*@\\w+)+)",
per1$text, ignore.case=TRUE)
# Collect who retweeted and who posted
# We'll use these results to form an edge list in order to create the graph
# create list to store user names
who_retweet = as.list(1:length(rt_patterns))
who_post = as.list(1:length(rt_patterns))
rt_tweet = as.list(1:length(rt_patterns))
# for loop
for (i in 1:length(rt_patterns))
{
# get tweet with retweet entity
twit = per1[rt_patterns[i],]
# get retweet source
poster = str_extract_all(twit$text,
"(RT|via)((?:\\b\\W*@\\w+)+)")
#remove ':'
poster = gsub(":", "", unlist(poster))
# name of retweeted user
who_post[[i]] = gsub("(RT @|via @)", "", poster, ignore.case=TRUE)
# name of retweeting user
who_retweet[[i]] = rep(twit$user.screen_name, length(poster))
# retweeted text
rt_tweet[[i]] = twit$text
}
# unlist results
who_post = unlist(who_post)
who_retweet = unlist(who_retweet)
rt_tweet = unlist(rt_tweet)
retweeter_poster = cbind(who_retweet, who_post)
el.df1<-as.data.frame(retweeter_poster)
el.df1<-el.df1[order(el.df1$who_post),]
el.df1<-el.df1[-grep(" ", el.df1$who_post),]  # remove RTs of multiples
rt_tweet<-rt_tweet[-grep(" ", rt_tweet),]  # remove RTs of multiples
rt_tweet<--grep(" ", rt_tweet)  # remove RTs of multiples
rt_tweet<-grep(" ", rt_tweet)  # remove RTs of multiples
who_retweet = as.list(1:length(rt_patterns))
who_post = as.list(1:length(rt_patterns))
rt_tweet = as.list(1:length(rt_patterns))
# for loop
for (i in 1:length(rt_patterns))
{
# get tweet with retweet entity
twit = per1[rt_patterns[i],]
# get retweet source
poster = str_extract_all(twit$text,
"(RT|via)((?:\\b\\W*@\\w+)+)")
#remove ':'
poster = gsub(":", "", unlist(poster))
# name of retweeted user
who_post[[i]] = gsub("(RT @|via @)", "", poster, ignore.case=TRUE)
# name of retweeting user
who_retweet[[i]] = rep(twit$user.screen_name, length(poster))
# retweeted text
rt_tweet[[i]] = twit$text
}
who_post = unlist(who_post)
who_retweet = unlist(who_retweet)
rt_tweet = unlist(rt_tweet)
?str_extract_all
who_retweet = as.list(1:length(rt_patterns))
who_post = as.list(1:length(rt_patterns))
rt_tweet = as.list(1:length(rt_patterns))
# for loop
for (i in 1:length(rt_patterns))
{
# get tweet with retweet entity
twit = per1[rt_patterns[i],]
# get retweet source
poster = str_extract(twit$text,
"(RT|via)((?:\\b\\W*@\\w+)+)")
#remove ':'
poster = gsub(":", "", unlist(poster))
# name of retweeted user
who_post[[i]] = gsub("(RT @|via @)", "", poster, ignore.case=TRUE)
# name of retweeting user
who_retweet[[i]] = rep(twit$user.screen_name, length(poster))
# retweeted text
rt_tweet[[i]] = twit$text
}
who_post = unlist(who_post)
who_retweet = unlist(who_retweet)
rt_tweet = unlist(rt_tweet)
retweeter_poster = cbind(who_retweet, who_post, rt_tweet)
el.df1<-as.data.frame(retweeter_poster)
el.df1<-el.df1[order(el.df1$who_post),]
el.df1<-el.df1[-grep(" ", el.df1$who_post),]  # remove RTs of multiples
rownames(el.df1)<-NULL
write.csv(el.df1, "cleaned_data/migration_el1.csv")
View(el.df1)
write.csv(el.df1, "cleaned_data/migration_el1.csv")
setwd("~/Dropbox/gh_projects/migration_tweets/cleaned_data")
el.df1<-read.csv("migration_el1.csv") # read in edgelist
el.df1<-el.df1[2:3]
View(el.df1)
el.df1<-read.csv("migration_el1.csv") # read in edgelist
setwd("~/Dropbox/gh_projects/migration_tweets/mixed_method_ts")
el.df1<-el.df1[2:4]
View(el.df1)
t1p<-table(el.df1$who_post)
t1r<-table(el.df1$who_retweet)
t1<-cbind(t1p, t1r)
?forcedNetwork
?forceNetwork
View(el.df1)
retweeter_poster = cbind(who_post,who_retweet, rt_tweet)
# generate graph
el.df1<-as.data.frame(retweeter_poster)
el.df1<-el.df1[order(el.df1$who_post),]
el.df1<-el.df1[-grep(" ", el.df1$who_post),]  # remove RTs of multiples
rownames(el.df1)<-NULL
write.csv(el.df1, "cleaned_data/migration_el1.csv")
setwd("~/Dropbox/gh_projects/migration_tweets")
load("cleaned_data/complete.RData")
require(stringr)
require(igraph)
Sys.setlocale(locale="C")
require(lubridate)
df$time<-as.POSIXct(dmy_hms(substr(df$created_at, 6, 25)))
df<-df[with(df, order(time)), ]
per1<-df[month(df$time) == 10,]
per2<-df[month(df$time) == 11,]
per3<-df[month(df$time) == 12,]
per4<-df[month(df$time) == 01,]
per5<-df[month(df$time) == 02,]
# Let's Identify retweets
# regular expressions to find retweets
grep("(RT|via)((?:\\b\\W*@\\w+)+)", df$text,
ignore.case=TRUE, value=TRUE)
##### Network Snapshot 1
# which tweets are retweets
rt_patterns = grep("(RT|via)((?:\\b\\W*@\\w+)+)",
per1$text, ignore.case=TRUE)
# Collect who retweeted and who posted
# We'll use these results to form an edge list in order to create the graph
# create list to store user names
who_retweet = as.list(1:length(rt_patterns))
who_post = as.list(1:length(rt_patterns))
rt_tweet = as.list(1:length(rt_patterns))
# for loop
for (i in 1:length(rt_patterns))
{
# get tweet with retweet entity
twit = per1[rt_patterns[i],]
# get retweet source
poster = str_extract(twit$text,
"(RT|via)((?:\\b\\W*@\\w+)+)")
#remove ':'
poster = gsub(":", "", unlist(poster))
# name of retweeted user
who_post[[i]] = gsub("(RT @|via @)", "", poster, ignore.case=TRUE)
# name of retweeting user
who_retweet[[i]] = rep(twit$user.screen_name, length(poster))
# retweeted text
rt_tweet[[i]] = twit$text
}
# unlist results
who_post = unlist(who_post)
who_retweet = unlist(who_retweet)
rt_tweet = unlist(rt_tweet)
# print(paste(length(unique(who_post)), " users retweeted by ", length(unique(who_retweet)), " users ", sep=""))
# Create graph from an edglist
# two column matrix of edges
retweeter_poster = cbind(who_post,who_retweet, rt_tweet)
# generate graph
el.df1<-as.data.frame(retweeter_poster)
el.df1<-el.df1[order(el.df1$who_post),]
el.df1<-el.df1[-grep(" ", el.df1$who_post),]  # remove RTs of multiples
rownames(el.df1)<-NULL
write.csv(el.df1, "cleaned_data/migration_el1.csv")
setwd("~/Dropbox/gh_projects/migration_tweets/cleaned_data")
el.df1<-read.csv("migration_el1.csv") # read in edgelist
el.df1<-el.df1[2:4]
t1p<-table(el.df1$who_post)
t1r<-table(el.df1$who_retweet)
t1<-cbind(t1p, t1r)
el.df1[el.df1$who_post %in% sample(names(t1p[t1p < 4]),length(el.df1[,1])/20),]
samp<-el.df1[el.df1$who_post %in% sample(names(t1p[t1p < 4]), length(el.df1[,1])/20),]
samp[1:2]
Nodes=samp[3]
samp[3]
forceNetwork(Links=samp[1:2],
Nodes=samp[3],
charge=-50, opacity=.4,
width=1000,
height=1000,
fontSize = 12,
linkDistance=50)
forceNetwork(Links=samp[1:2],
Nodes=samp[3],
charge=-50, opacity=.4,
width=1000,
height=1000,
linkDistance=50)
samp$id<-rownames()
samp$id<-rownames(samp)
forceNetwork(Links=samp[1:2],
Nodes=samp[3],
NodeID=samp[4],
charge=-50, opacity=.4,
width=1000,
height=1000,
linkDistance=50)
samp[1:2]
View(samp)
samp[3]
samp[1:2]
samp[4]
forceNetwork(Links=samp[1:2],
Nodes=samp[3],
NodeID=samp[4])
forceNetwork(Links=as.data.frame(samp[1:2]),
Nodes=as.data.frame(samp[3]),
NodeID=as.data.frame(samp[4]))
data(MisLinks)
data(MisNodes)
# Plot
forceNetwork(Links = MisLinks, Nodes = MisNodes,
Source = "source", Target = "target",
Value = "value", NodeID = "name",
Group = "group", opacity = 0.8)
View(MisLinks)
View(MisNodes)
forceNetwork(Links=samp[1:2],
Nodes=samp[3])
forceNetwork(Links=samp[1:2],
Nodes=samp[3],
NodeID=samp[1])
View(MisLinks)
forceNetwork(Links=samp[1:2],
Nodes=samp[3],
NodeID=samp[1])
samp[1:2,]
samp[,1:2]
samp[,3]
samp[1]
forceNetwork(Links=samp[,1:2],
Nodes=samp[,3],
NodeID=samp[1])
samp[,1]
forceNetwork(Links=samp[,1:2],
Nodes=samp[,3],
NodeID=samp[,1])
forceNetwork(Links=samp[,1:2],
Nodes=as.data.frame(samp[,3]),
NodeID=samp[,1])
as.data.frame(samp[,3])
samp[,1]
forceNetwork(Links=samp[,1:2],
Nodes=as.data.frame(samp[,3]),
NodeID=samp[,1])
forceNetwork(Links=as.data.frame(samp[,1:2]),
Nodes=as.data.frame(samp[,3]),
NodeID=as.data.frame(samp[,1]))
?forceNetwork
View(samp)
forceNetwork(Links=as.data.frame(samp[,1:2]),
Nodes=as.data.frame(samp[,3]),
NodeID="row.names")
View(samp)
forceNetwork(Links=as.data.frame(samp[,1:2]),
Nodes=as.data.frame(samp[,3:4]),
NodeID="id")
samp$group<-1
forceNetwork(Links=as.data.frame(samp[,1:2]),
Nodes=as.data.frame(samp[,3:4]),
NodeID="id",
Group="group")
forceNetwork(Links=as.data.frame(samp[,1:2]),
Nodes=as.data.frame(samp[,3:5]),
NodeID="id",
Group="group")
samp[complete.cases(samp),]
samp<-samp[complete.cases(samp),]
View(samp)
samp<-samp[complete.cases(samp),]
forceNetwork(Links=as.data.frame(samp[,2:3]),
Nodes=as.data.frame(samp[,3:5]),
NodeID="id",
Group="group")
as.data.frame(samp[,2:3]
as.data.frame(samp[,2:3])
View(samp)
as.data.frame(samp[,2:3])
as.data.frame(samp[,3:5])
View(samp)
samp$id<-as.numeric(samp$rt_tweet)
View(samp)
simpleNetwork(el.df1[el.df1$who_post %in% sample(names(t1p[t1p < 4]),length(el.df1[,1])/20),], Source="who_post", Target="who_retweet", charge=-50, opacity=.4,
width=1000,
height=1000,
fontSize = 12,
linkDistance=50)
el.df1[el.df1$who_post %in% sample(names(t1p[t1p < 2]),10),]
simpleNetwork(el.df1[el.df1$who_post %in% names(t1p[t1p > 30]), ], Source="who_post", Target="who_retweet", charge=-50, opacity=.4,
width=1000,
height=1000,
fontSize = 12,
linkDistance=50)
simpleNetwork(el.df1[el.df1$who_post %in% sample(names(t1p[t1p < 4]),length(el.df1[,1])/20),], Source="who_post", Target="who_retweet", charge=-50, opacity=.4,
width=1000,
height=1000,
fontSize = 12,
linkDistance=50)
simpleNetwork(el.df1[el.df1$who_post %in% sample(names(t1p[t1p < 2]),length(el.df1[,1])/20),], Source="who_post", Target="who_retweet", charge=-50, opacity=.4,
width=1000,
height=1000,
fontSize = 12,
linkDistance=50)
forceNetwork(Links=as.data.frame(samp[,2:3]),
Nodes=as.data.frame(samp[,3:5]),
NodeID="id",
Group="group")
samp$id<-as.factor(samp$rt_tweet)
View(samp)
forceNetwork(Links=as.data.frame(samp[,2:3]),
Nodes=as.data.frame(samp[,3:5]),
NodeID="id",
Group="group")
samp$id<-as.factor(samp$who_post)
samp$group<-1
forceNetwork(Links=as.data.frame(samp[,2:3]),
Nodes=as.data.frame(samp[,3:5]),
NodeID="id",
Group="group")
forceNetwork(Links=as.data.frame(samp[,2:3]),
Nodes=as.data.frame(samp[,3:5]),
NodeID="id",
Group="group")
simpleNetwork(el.df1[el.df1$who_post %in% sample(names(t1p[t1p < 2]),length(el.df1[,1])/20),], Source="who_post", Target="who_retweet", charge=-50, opacity=.4,
width=1000,
height=1000,
fontSize = 12,
linkDistance=50)
el.df1[el.df1$who_post %in% sample(names(t1p[t1p < 2]),10),]
el.df1[el.df1$who_post %in% sample(names(t1p[t1p < 2]),length(el.df1[,1])/20),]
el.df1[el.df1$who_post %in% sample(names(t1p[t1p < 2]),length(el.df1[,1])/20),]
el.df1[el.df1$who_post %in% sample(names(t1p[t1p < 2]),length(el.df1[,1])/20),]
el.df1[el.df1$who_post %in% sample(names(t1p[t1p < 4]), length(el.df1[,1])/20),]
el.df1[el.df1$who_post %in% sample(names(t1p[t1p < 2]),10),]
el.df1[el.df1$who_post %in% sample(names(t1p[t1p < 2]),20),]
setwd("~/Dropbox/gh_projects/migration_tweets/cleaned_data")
el.df1<-read.csv("migration_el1.csv") # read in edgelist
el.df1<-el.df1[2:4]
t1p<-table(el.df1$who_post)
t1r<-table(el.df1$who_retweet)
t1<-cbind(t1p, t1r)
el.df1[el.df1$who_post %in% sample(names(t1p[t1p < 2]),20),]
el.df1[el.df1$who_post %in% sample(names(t1p[t1p < 2]),length(el.df1[,1])/20),]
el.df1[el.df1$who_post %in% names(t1p[t1p < 2]),]
sample(el.df1[el.df1$who_post %in% names(t1p[t1p < 2]),], 20)
el.df1[sample(el.df1$who_post, 20) %in% names(t1p[t1p < 2]),]
el.df1[sample(el.df1$who_post, 20) %in% names(t1p[t1p < 2]),]
simpleNetwork(el.df1[el.df1$who_post %in% sample(names(t1p[t1p < 2]),length(el.df1[,1])/20),], Source="who_post", Target="who_retweet", charge=-50, opacity=.4,
width=1000,
height=1000,
fontSize = 12,
linkDistance=50)
el.df1<-el.df1[2:3]
setwd("~/Dropbox/gh_projects/migration_tweets/cleaned_data")
el.df1<-read.csv("migration_el1.csv") # read in edgelist
el.df1<-el.df1[2:3]
t1p<-table(el.df1$who_post)
t1r<-table(el.df1$who_retweet)
t1<-cbind(t1p, t1r)
setwd("~/Dropbox/gh_projects/migration_tweets/cleaned_data")
el.df1<-read.csv("migration_el1.csv") # read in edgelist
el.df1<-el.df1[,2:3]
setwd("~/Dropbox/gh_projects/migration_tweets/cleaned_data")
el.df1<-read.csv("migration_el1.csv") # read in edgelist
el.df1<-el.df1[,2:4]
View(el.df1)
setwd("~/Dropbox/gh_projects/migration_tweets/cleaned_data")
el.df1<-read.csv("migration_el1.csv") # read in edgelist
el.df1<-el.df1[2:4]
setwd("~/Dropbox/gh_projects/migration_tweets/cleaned_data")
el.df1<-read.csv("migration_el1.csv") # read in edgelist
el.df1<-el.df1[,2:3]
t1p<-table(el.df1$who_post)
t1r<-table(el.df1$who_retweet)
t1<-cbind(t1p, t1r)
simpleNetwork(el.df1[el.df1$who_post %in% names(t1p[t1p > 30]), ], Source="who_post", Target="who_retweet", charge=-50, opacity=.4,
width=1000,
height=1000,
fontSize = 12,
linkDistance=50)
simpleNetwork(el.df1[el.df1$who_post %in% sample(names(t1p[t1p < 2]),length(el.df1[,1])/30),], Source="who_post", Target="who_retweet", charge=-50, opacity=.4,
width=1000,
height=1000,
fontSize = 12,
linkDistance=50)
simpleNetwork(el.df1[el.df1$who_post %in% sample(names(t1p[t1p < 2]),length(el.df1[,1])/30),], charge=-50, opacity=.4,
width=1000,
height=1000,
fontSize = 12,
linkDistance=50)
simpleNetwork(el.df1[el.df1$who_post %in% sample(names(t1p[t1p < 2]),length(el.df1[,1])/20),], charge=-50, opacity=.4,
width=1000,
height=1000,
fontSize = 12,
linkDistance=50)
?simpleNetwork
setwd("~/Dropbox/gh_projects/migration_tweets/cleaned_data")
el.df1<-read.csv("migration_el1.csv") # read in edgelist
el.df1<-el.df1[,2:4]
simpleNetwork(el.df1[el.df1$who_post %in% sample(names(t1p[t1p < 2]),length(el.df1[,1])/20),], charge=-50, opacity=.4,
width=1000,
height=1000,
fontSize = 12,
linkDistance=50)
t1p<-table(el.df1$who_post)
t1r<-table(el.df1$who_retweet)
t1<-cbind(t1p, t1r)
simpleNetwork(el.df1[el.df1$who_post %in% sample(names(t1p[t1p < 2]),length(el.df1[,1])/30),], charge=-50, opacity=.4,
width=1000,
height=1000,
fontSize = 12,
linkDistance=50)
View(el.df1)
View(el.df1)
simpleNetwork(el.df1[el.df1$who_post %in% sample(names(t1p[t1p < 2]),length(el.df1[,1])/30),], charge=-50, opacity=.4, Source="rt_tweet", Target="who_retweet",
width=1000,
height=1000,
fontSize = 12,
linkDistance=50)
simpleNetwork(el.df1[el.df1$who_post %in% sample(names(t1p[t1p < 2]),length(el.df1[,1])/30),], charge=-50, opacity=.4, Target="rt_tweet", Source="who_retweet",
width=1000,
height=1000,
fontSize = 12,
linkDistance=50)
setwd("~/Dropbox/gh_projects/migration_tweets/cleaned_data")
el.df1<-read.csv("migration_el1.csv") # read in edgelist
el.df1<-el.df1[,3:4]
View(el.df1)
