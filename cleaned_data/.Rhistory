setwd("~/Dropbox/migration_tweets")
library(plyr)
require(jsonlite)
setwd("~/Dropbox/gh_projects_migration_tweets")
setwd("~/Dropbox/gh_projects/migration_tweets")
require(jsonlite)
lstJson <- fromJSON("output.json", flatten=TRUE)
lstJson[2]
names(lstJson)
summary(lstJson$lang)
df<-unlist(lstJson)
lstJson <- fromJSON("output.json", flatten=TRUE)
setwd("~/Desktop/migration_tweets")
setwd("~/Desktop/migration_tweet")
require(jsonlite)
lstJson <- fromJSON("output.json", flatten=TRUE)
library(RJSONIO)
lstJson <- fromJSON("output.json")
names(lstJson)
final_data <- do.call(rbind, lstJson)
final_data <- do.call(rbind, final_data)
View(final_data)
library(RJSONIO)
lstJson <- fromJSON("output.json")
final_data <- do.call(rbind, lstJson)
setwd("~/Desktop/migration_tweet")
library(RJSONIO)
lstJson <- fromJSON("output.json")
final_data <- do.call(rbind, lstJson)
names(lstJson)
df<-unlist(lstJson)
colnames(lstJson)
lstJson[,c("links")]
final_data <- do.call(rbind, final_data)
require(jsonlite)
lstJson <- fromJSON("output.json", flatten=TRUE)
final_data <- do.call(rbind, lstJson)
lstJson <- fromJSON("output.json", flatten=TRUE)
library(RJSONIO)
lstJson <- fromJSON("output.json")
library(rjson)
json_file <- "output.json"
setwd("~/Desktop/migration_tweet")
json_data <- fromJSON(paste(readLines(json_file), collapse=""))
data = unlist(json_data)
json_data <- fromJSON(paste(readLines(json_file, n=300), collapse=""))
data = unlist(json_data)
final_data <- do.call(rbind, json_data)
json_data <- fromJSON(paste(readLines(json_file, n=1000), collapse=""))
final_data <- do.call(rbind, json_data)
names(final_data)
final_data <- do.call(rbind, final_data)
final_data <- do.call(rbind, json_data)
final_data <- unlist(final_data)
json_data <- fromJSON(paste(readLines(json_file, n=4000), collapse=""))
final_data <- do.call(rbind, json_data)
names(final_data)
final_data[1]
final_data[2]
?fromJSON
library(rjson)
json_data <- fromJSON(paste(readLines(json_file, n=4000), collapse=""), unexpected.escape = "error")
json_data <- fromJSON(paste(readLines(json_file, n=4000), collapse=""), unexpected.escape = "skip")
json_data <- fromJSON(paste(readLines(json_file, n=11000), collapse=""), unexpected.escape = "skip")
final_data <- do.call(rbind, json_data)
final_data <- do.call(rbind, final_data)
View(final_data)
lstJson <- fromJSON("output.json")
setwd("~/Desktop/migration_tweet")
library(RJSONIO)
lstJson <- fromJSON("output.json")
lstJson <- fromJSON("output.json")
setwd("~/Desktop/migration_tweet")
lstJson <- fromJSON("output.json")
library(rjson)
json_file <- "output.json"
json_data <- fromJSON(paste(readLines(json_file, n=11000), collapse=""))
final_data <- do.call(rbind, json_data)
colnames(final_data)
final_data[,c("links","text")]
final_data[,c("id","verified")]
final_data[,c("id","verified")]
require(jsonlite)
lstJson <- fromJSON("output.json", flatten=TRUE)
lstJson <- fromJSON("output.json", flatten=TRUE)
lstJson <- fromJSON("output.json", flatten=TRUE)
names(lstJson)
summary(lstJson$en)
summary(lstJson$lang)
summary(as.factor(lstJson$lang))
setwd("~/Dropbox/gh_projects/migration_tweets/preliminary")
library(twitteR)
library(igraph)
library(stringr)
library(RJSONIO)
require(ROAuth)
require(lubridate)
require(ggplot2)
require(tm)
require(Snowball)
require(RColorBrewer)
require(stargazer)
install.packages("ROAUTH")
install.packages("ROAuth")
install.packages("Snowball")
df<-lstJson
rm(lstJson)
names(df)
df$time<-as.POSIXct(df$created_at)
summary(df$created_at)
df$time<-as.POSIXct(as.numeric(df$created_at))
summary(as.numeric(df$created_at))
summary(as.factor(df$created_at))
?substr
df$time<-as.POSIXct(gsub(df$created_at, 1,5)) # Doesnt work, need to wrangle date
df$time<-as.POSIXct(gsub(df$created_at, 6,20)) # Doesnt work, need to wrangle date
summary(as.factor(df$created_at, 6,20)))
summary(as.factor(df$created_at, 6,20))
summary(as.factor(df$created_at))
df$time<-as.POSIXct(as.factor(df$created_at)) # Doesnt work, need to wrangle date
df$time<-as.POSIXct(as.factor(gsub(df$created_at, 6, 20)) # Doesnt work, need to wrangle date
)
summary(as.factor(gsub(df$created_at, 6, 20))
)
?strsplit
summary(as.factor(strsplit(df$created_at, ","))
)
summary(as.factor(strsplit(df$created_at, ",")[1])
)
summary(as.factor(strsplit(df$created_at, ",")[1]))
summary(as.factor(strsplit(df$created_at, ",")[2]))
summary(as.factor(strsplit(df$created_at, ",")[,1]))
summary(as.factor(strsplit(df$created_at, ",")[1,]))
summary(as.factor(strsplit(df$created_at, ",")[[1]]))
summary(as.factor(strsplit(df$created_at, ",")[[1,1]]))
summary(as.factor(strsplit(df$created_at, ",")[[2]]))
summary(as.factor(strsplit(df$created_at, ",")[[2,0]]))
summary(as.factor(strsplit(df$created_at, ",")[[0]]))
summary(as.factor(strsplit(df$created_at, ",")[[1]]))
df$time<-as.POSIXct(as.factor(strsplit(df$created_at, ",")[[1]]) # Doesnt work, need to wrangle date
)
setwd("~/Dropbox/gh_projects/migration_tweets")
require(jsonlite)
require(lubridate)
require(ggplot2)
require(twitteR)
require(stringr)
library(igraph)
require(tm)
#require(Snowball)
require(RColorBrewer)
# df <- fromJSON("output.json", flatten=TRUE)
# df<-df[complete.cases(df["user.screen_name"]),]
# save(df, file="cleaned_data/complete.RData")
load("cleaned_data/complete.RData")
el.df<-read.csv("cleaned_data/migration_el.csv") # read in edgelist
el.df<-el.df[,2:3]
rt_graph = graph.edgelist(as.matrix(el.df))
View(el.df)
require(networkD3)
require(htmlwidgets)
d<-data.frame(el.df$who_post, el.df$who_retweet)
simpleNetwork(d)
simpleNetwork(el.df)
simpleNetwork(el.df[,1:100])
simpleNetwork(el.df[1:100,])
?simpleNetwork
View(el.df)
View(d)
el.df<-data.frame(el.df$who_post, el.df$who_retweet)
View(el.df)
names(el.df)<-c("post", "retweet")
View(el.df)
simpleNetwork(el.df[1:600,])
simpleNetwork(el.df[1:2000,])
d3ntwrk<-simpleNetwork(el.df[1:2000,])
saveNetwork(d3ntwrk, "d3ntwrk.html", selfcontained = TRUE)
simpleNetwork(el.df[1:4000,])
View(el.df)
summary(el.df$post)
d3ntwrk<-simpleNetwork(el.df[1:6000,], fontSize=7)
simpleNetwork(el.df[1:6000,], fontSize=7)
tbl <- table(el.df$post)
el.df[1:6000,]
simpleNetwork(el.df[1:5000,], fontSize=7)
simpleNetwork(el.df[1:4000,], fontSize=7)
dense.ntwrk <- droplevels(el.df[el.df$post %in% names(tbl)[tbl >= 5],,drop=FALSE])
View(dense.ntwrk)
simpleNetwork(dense.ntwrk, fontSize=7)
d3ntwrk<-simpleNetwork(dense.ntwrk, fontSize=12)
saveNetwork(d3ntwrk, "d3ntwrk.html", selfcontained = TRUE)
dense.ntwrk <- droplevels(el.df[el.df$post %in% names(tbl)[tbl >= 10],,drop=FALSE])
dense.ntwrk <- droplevels(el.df[el.df$post %in% names(tbl)[tbl >= 20],,drop=FALSE])
dense.ntwrk <- droplevels(el.df[el.df$post %in% names(tbl)[tbl >= 30],,drop=FALSE])
dense.ntwrk <- droplevels(el.df[el.df$post %in% names(tbl)[tbl >= 40],,drop=FALSE])
dense.ntwrk <- droplevels(el.df[el.df$post %in% names(tbl)[tbl >= 50],,drop=FALSE])
d3ntwrk<-simpleNetwork(dense.ntwrk, fontSize=12)
saveNetwork(d3ntwrk, "d3ntwrk.html", selfcontained = TRUE)
d3ntwrk<-simpleNetwork(dense.ntwrk, fontSize=12, height=700)
saveNetwork(d3ntwrk, "d3ntwrk.html", selfcontained = TRUE)
dense.ntwrk <- droplevels(el.df[el.df$post %in% names(tbl)[tbl >= 100],,drop=FALSE])
dense.ntwrk <- droplevels(el.df[el.df$post %in% names(tbl)[tbl >= 200],,drop=FALSE])
dense.ntwrk <- droplevels(el.df[el.df$post %in% names(tbl)[tbl >= 300],,drop=FALSE])
d3ntwrk<-simpleNetwork(dense.ntwrk, fontSize=9, height=600)
saveNetwork(d3ntwrk, "d3ntwrk.html", selfcontained = TRUE)
d3ntwrk<-simpleNetwork(dense.ntwrk, fontSize=9)
saveNetwork(d3ntwrk, "d3ntwrk.html", selfcontained = TRUE)
dense.ntwrk <- droplevels(el.df[el.df$post %in% names(tbl)[tbl >= 400],,drop=FALSE])
d3ntwrk<-simpleNetwork(dense.ntwrk, fontSize=9)
saveNetwork(d3ntwrk, "d3ntwrk.html", selfcontained = TRUE)
rt_graph = delete.vertices(rt_graph, V(rt_graph)[ degree(rt_graph)==0 ])
V(rt_graph)$label = NA
V(rt_graph)$color =  rgb(1,0,0,.1)
V(rt_graph)$size = 2
E(rt_graph)$width = .3
E(rt_graph)$color = rgb(.5,.5,0,.1)
# par(bg="white", mar=c(1,1,1,1))
# plot.igraph(rt_graph, layout=layout.fruchterman.reingold, main="Retweet Network")
cent<-data.frame(bet=betweenness(rt_graph),eig=evcent(rt_graph)$vector)
res<-lm(eig~bet,data=cent)$residuals
cent<-transform(cent,res=res)
set.seed(1405)
key.accounts<-ggplot(cent,aes(x=bet,y=eig,
label=rownames(cent),colour=res)) +
xlab("Betweenness Centrality") +
ylab("Eigenvector Centrality") +
labs(title="Key Twitter Accounts on #PSA14") +
theme_bw() +
geom_text(position = position_jitter(width = 2000))
key.accounts
rt_graph = delete.vertices(rt_graph, V(rt_graph)[ degree(rt_graph)<=2 ])
V(rt_graph)$label = NA
V(rt_graph)$color =  rgb(1,0,0,.1)
V(rt_graph)$size = 2
E(rt_graph)$width = .3
E(rt_graph)$color = rgb(.5,.5,0,.1)
cent<-data.frame(bet=betweenness(rt_graph),eig=evcent(rt_graph)$vector)
res<-lm(eig~bet,data=cent)$residuals
cent<-transform(cent,res=res)
set.seed(1405)
key.accounts<-ggplot(cent,aes(x=bet,y=eig,
label=rownames(cent),colour=res)) +
xlab("Betweenness Centrality") +
ylab("Eigenvector Centrality") +
labs(title="Key Twitter Accounts") +
theme_bw() +
geom_text(position = position_jitter(width = 2000))
key.accounts
rt_graph = delete.vertices(rt_graph, V(rt_graph)[ degree(rt_graph)<=5 ])
V(rt_graph)$label = NA
V(rt_graph)$color =  rgb(1,0,0,.1)
V(rt_graph)$size = 2
E(rt_graph)$width = .3
E(rt_graph)$color = rgb(.5,.5,0,.1)
# par(bg="white", mar=c(1,1,1,1))
# plot.igraph(rt_graph, layout=layout.fruchterman.reingold, main="Retweet Network")
cent<-data.frame(bet=betweenness(rt_graph),eig=evcent(rt_graph)$vector)
res<-lm(eig~bet,data=cent)$residuals
cent<-transform(cent,res=res)
set.seed(1405)
key.accounts<-ggplot(cent,aes(x=bet,y=eig,
label=rownames(cent),colour=res)) +
xlab("Betweenness Centrality") +
ylab("Eigenvector Centrality") +
labs(title="Key Twitter Accounts") +
theme_bw() +
geom_text(position = position_jitter(width = 2000))
key.accounts
rt_graph = delete.vertices(rt_graph, V(rt_graph)[ degree(rt_graph)<=10 ])
V(rt_graph)$label = NA
V(rt_graph)$color =  rgb(1,0,0,.1)
V(rt_graph)$size = 2
E(rt_graph)$width = .3
E(rt_graph)$color = rgb(.5,.5,0,.1)
# par(bg="white", mar=c(1,1,1,1))
# plot.igraph(rt_graph, layout=layout.fruchterman.reingold, main="Retweet Network")
cent<-data.frame(bet=betweenness(rt_graph),eig=evcent(rt_graph)$vector)
res<-lm(eig~bet,data=cent)$residuals
cent<-transform(cent,res=res)
set.seed(1405)
key.accounts<-ggplot(cent,aes(x=bet,y=eig,
label=rownames(cent),colour=res)) +
xlab("Betweenness Centrality") +
ylab("Eigenvector Centrality") +
labs(title="Key Twitter Accounts") +
theme_bw() +
geom_text(position = position_jitter(width = 2000))
key.accounts
rt_graph = delete.vertices(rt_graph, V(rt_graph)[ degree(rt_graph)<=20 ])
V(rt_graph)$label = NA
V(rt_graph)$color =  rgb(1,0,0,.1)
V(rt_graph)$size = 2
E(rt_graph)$width = .3
E(rt_graph)$color = rgb(.5,.5,0,.1)
# par(bg="white", mar=c(1,1,1,1))
# plot.igraph(rt_graph, layout=layout.fruchterman.reingold, main="Retweet Network")
cent<-data.frame(bet=betweenness(rt_graph),eig=evcent(rt_graph)$vector)
res<-lm(eig~bet,data=cent)$residuals
cent<-transform(cent,res=res)
set.seed(1405)
key.accounts<-ggplot(cent,aes(x=bet,y=eig,
label=rownames(cent),colour=res)) +
xlab("Betweenness Centrality") +
ylab("Eigenvector Centrality") +
labs(title="Key Twitter Accounts") +
theme_bw() +
geom_text(position = position_jitter(width = 2000))
key.accounts
key.accounts<-ggplot(cent,aes(x=bet,y=eig,
label=rownames(cent),colour=res)) +
xlab("Betweenness Centrality") +
ylab("Eigenvector Centrality") +
labs(title="Key Twitter Accounts") +
theme_bw() +
geom_text(position = position_jitter(width = 2000, height=2000))
key.accounts
key.accounts<-ggplot(cent,aes(x=bet,y=eig,
label=rownames(cent),colour=res)) +
xlab("Betweenness Centrality") +
ylab("Eigenvector Centrality") +
labs(title="Key Twitter Accounts") +
theme_bw() +
geom_text(position = position_jitter(width = 500, height=500))
key.accounts
key.accounts<-ggplot(cent,aes(x=bet,y=eig,
label=rownames(cent),colour=res)) +
xlab("Betweenness Centrality") +
ylab("Eigenvector Centrality") +
labs(title="Key Twitter Accounts") +
theme_bw() +
geom_text()
key.accounts
cent<-data.frame(bet=betweenness(rt_graph)$vector,eig=evcent(rt_graph)$vector)
res<-lm(eig~bet,data=cent)$residuals
cent<-transform(cent,res=res)
set.seed(1405)
key.accounts<-ggplot(cent,aes(x=bet,y=eig,
label=rownames(cent),colour=res)) +
xlab("Betweenness Centrality") +
ylab("Eigenvector Centrality") +
labs(title="Key Twitter Accounts") +
theme_bw() +
geom_text()
el.df<-read.csv("cleaned_data/migration_el.csv") # read in edgelist
el.df<-el.df[,2:3]
rt_graph = graph.edgelist(as.matrix(el.df))
# Make and plot graph
rt_graph = delete.vertices(rt_graph, V(rt_graph)[ degree(rt_graph)==0 ])
V(rt_graph)$label = NA
V(rt_graph)$color =  rgb(1,0,0,.1)
V(rt_graph)$size = 2
E(rt_graph)$width = .3
E(rt_graph)$color = rgb(.5,.5,0,.1)
cent<-data.frame(bet=betweenness(rt_graph)$vector,eig=evcent(rt_graph)$vector)
cent<-data.frame(bet=betweenness(rt_graph),eig=evcent(rt_graph)$vector)
View(cent)
res<-lm(eig~bet,data=cent)$residuals
cent<-transform(cent,res=res)
key.accounts<-ggplot(cent,aes(x=bet,y=eig,
label=rownames(cent),colour=res)) +
xlab("Betweenness Centrality") +
ylab("Eigenvector Centrality") +
labs(title="Key Twitter Accounts") +
theme_bw() +
geom_text()
key.accounts
cent<-data.frame(bet=betweenness(rt_graph),eig=evcent(rt_graph)$vector)
res<-lm(eig~bet,data=cent)$residuals
cent<-transform(cent,res=res)
set.seed(1405)
key.accounts<-ggplot(cent,aes(x=bet,y=eig,
label=rownames(cent),colour=res)) +
xlab("Betweenness Centrality") +
ylab("Eigenvector Centrality") +
labs(title="Key Twitter Accounts") +
theme_bw() +
geom_text(position = position_jitter(width = 500))
key.accounts
View(cent)
cent[eig<0]
cent[eig<0,]
cent[,eig<0]
cent[cent$eig<0]
cent[cent$eig<0,]
cent[,cent$eig<0]
cent$eig<0
cent$eig==NA
cent$eig<0
cent[cent$eig<0]
cent[cent$eig<0,]
cent[,cent$eig<0]
dense.ntwrk <- droplevels(el.df[el.df$post %in% names(tbl)[tbl >= 500],,drop=FALSE])
el.df<-data.frame(el.df$who_post, el.df$who_retweet)
names(el.df)<-c("post", "retweet")
tbl <- table(el.df$post)
dense.ntwrk <- droplevels(el.df[el.df$post %in% names(tbl)[tbl >= 500],,drop=FALSE])
el.df<-data.frame(el.df$who_post, el.df$who_retweet)
names(el.df)<-c("post", "retweet")
tbl <- table(el.df$post)
dense.ntwrk <- droplevels(el.df[el.df$post %in% names(tbl)[tbl >= 600],,drop=FALSE])
el.df<-read.csv("cleaned_data/migration_el.csv") # read in edgelist
el.df<-el.df[,2:3]
rt_graph = graph.edgelist(as.matrix(el.df))
el.df<-data.frame(el.df$who_post, el.df$who_retweet)
names(el.df)<-c("post", "retweet")
tbl <- table(el.df$post)
dense.ntwrk <- droplevels(el.df[el.df$post %in% names(tbl)[tbl >= 600],,drop=FALSE])
setwd("~/Dropbox/gh_projects/migration_tweets/cleaned_data")
dense.ntwrk <- droplevels(el.df[el.df$post %in% names(tbl)[tbl >= 700],,drop=FALSE])
dense.ntwrk <- droplevels(el.df[el.df$post %in% names(tbl)[tbl >= 800],,drop=FALSE])
simpleNetwork(dense.ntwrk, fontSize=9)
dense.ntwrk <- droplevels(el.df[el.df$post %in% names(tbl)[tbl >= 600],,drop=FALSE])
