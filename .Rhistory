V(rt_graph2)$label.cex .8
V(rt_graph2)$label = V(rt_graph2)$name
E(rt_graph2)$width = .3
E(rt_graph2)$color = rgb(.5,.5,0,.1)
# par(bg="white", mar=c(1,1,1,1))
plot.igraph(rt_graph2, layout=layout.fruchterman.reingold, main="Whole Retweet Network")
fc <- fastgreedy.community(rt_graph2) ## communities / clusters
rt_graph2 = graph.edgelist(as.matrix(el.df), undirected=TRUE)
rt_graph2 = graph.edgelist(as.matrix(el.df), directed=F)
fc <- fastgreedy.community(rt_graph2) ## communities / clusters
V(rt_graph2)$label.cex = V(rt_graph2)$degree/(max(V(rt_graph2)$degree)/2)+ .3
rt_graph2 = graph.edgelist(as.matrix(el.df), directed=F)
# Make and plot graph
rt_graph2 = delete.vertices(rt_graph2, V(rt_graph2)[ degree(rt_graph2)<5 ])
V(rt_graph2)$color =  rgb(1,0,0,.1)
V(rt_graph2)$size = 2
V(rt_graph2)$label.cex = V(rt_graph2)$degree/(max(V(rt_graph2)$degree)/2)+ .3
rt_graph2 = graph.edgelist(as.matrix(el.df), directed=TRUE)
V(rt_graph2)$label.cex = V(rt_graph2)$degree/(max(V(rt_graph2)$degree)/2)+ .3
rt_graph2 = graph.edgelist(as.matrix(el.df), directed=TRUE)
V(rt_graph2)$label.cex = V(rt_graph2)$degree/(max(V(rt_graph2)$degree)/2)+ .8
max(V(rt_graph2)$degree
)
?max
V(rt_graph2)$label.cex = V(rt_graph2)$degree/(max(V(rt_graph2)$degree, na.rm=TRUE)/2)+ .8
rt_graph2 = delete.vertices(rt_graph2, V(rt_graph2)[ degree(rt_graph2)==0 ])
V(rt_graph2)$label.cex = V(rt_graph2)$degree/(max(V(rt_graph2)$degree)/2)+ .8
V(rt_graph2)$label.cex = V(rt_graph2)$degree/(max(V(rt_graph2)$degree)/2, na.rm=TRUE)+ .8
V(rt_graph2)$label.cex = V(rt_graph2)$degree+ .8
rt_graph2 = delete.vertices(rt_graph2, V(rt_graph2)[ degree(rt_graph2)==0 ])
V(rt_graph2)$color =  rgb(1,0,0,.1)
V(rt_graph2)$size = 2
plot.igraph(rt_graph2, layout=layout.fruchterman.reingold, main="Whole Retweet Network")
rt_graph2 = graph.edgelist(as.matrix(el.df), directed=TRUE)
rt_graph2 = delete.vertices(rt_graph2, V(rt_graph2)[ degree(rt_graph2)<5 ])
V(rt_graph2)$label.cex = log(V(rt_graph2)$degree)+ .8
V(rt_graph2)$label.cex = V(rt_graph2)$degree)
V(rt_graph2)$label.cex = V(rt_graph2)$degree
V(rt_graph2)$label.cex = V(rt_graph2)$degree+.5
E(rt_graph2)$width = .3
E(rt_graph2)$color = rgb(.5,.5,0,.1)
plot.igraph(rt_graph2, layout=layout.fruchterman.reingold, main="Whole Retweet Network")
rt_graph2 = graph.edgelist(as.matrix(el.df), directed=TRUE)
# Make and plot graph
rt_graph2 = delete.vertices(rt_graph2, V(rt_graph2)[ degree(rt_graph2)<5 ])
V(rt_graph2)$color =  rgb(1,0,0,.1)
V(rt_graph2)$size = 2
V(rt_graph2)$label.cex .8
V(rt_graph2)$label = V(rt_graph2)$name
V(rt_graph2)$label.cex = .5
E(rt_graph2)$width = .3
E(rt_graph2)$color = rgb(.5,.5,0,.1)
# par(bg="white", mar=c(1,1,1,1))
plot.igraph(rt_graph2, layout=layout.fruchterman.reingold, main="Whole Retweet Network")
rt_graph2 = graph.edgelist(as.matrix(el.df), directed=TRUE)
# Make and plot graph
rt_graph2 = delete.vertices(rt_graph2, V(rt_graph2)[ degree(rt_graph2)<10 ])
V(rt_graph2)$color =  rgb(1,0,0,.1)
V(rt_graph2)$size = 2
V(rt_graph2)$label.cex .8
V(rt_graph2)$label = V(rt_graph2)$name
V(rt_graph2)$label.cex = .5
E(rt_graph2)$width = .3
E(rt_graph2)$color = rgb(.5,.5,0,.1)
# par(bg="white", mar=c(1,1,1,1))
plot.igraph(rt_graph2, layout=layout.fruchterman.reingold, main="Whole Retweet Network")
rt_graph2 = graph.edgelist(as.matrix(el.df), directed=TRUE)
# Make and plot graph
rt_graph2 = delete.vertices(rt_graph2, V(rt_graph2)[ degree(rt_graph2)<30 ])
V(rt_graph2)$color =  rgb(1,0,0,.1)
V(rt_graph2)$size = 2
V(rt_graph2)$label.cex .8
V(rt_graph2)$label = V(rt_graph2)$name
V(rt_graph2)$label.cex = .5
E(rt_graph2)$width = .3
E(rt_graph2)$color = rgb(.5,.5,0,.1)
# par(bg="white", mar=c(1,1,1,1))
plot.igraph(rt_graph2, layout=layout.fruchterman.reingold, main="Whole Retweet Network")
rt_graph2 = delete.vertices(rt_graph2, V(rt_graph2)[ degree(rt_graph2)<10 ])
V(rt_graph2)$label = V(rt_graph2)$name[ degree(rt_graph2)>30 ]
V(rt_graph2)$label = V(rt_graph2)$name[,degree(rt_graph2)>30 ]
V(rt_graph2)$label = V(rt_graph2)$name[degree(rt_graph2)>30,]
V(rt_graph2)$label[degree(rt_graph2)>30] = V(rt_graph2)$name
V(rt_graph2)$label[degree(rt_graph2)>30] = V(rt_graph2)$name[degree(rt_graph2)>30]
rt_graph2 = graph.edgelist(as.matrix(el.df), directed=TRUE)
# Make and plot graph
rt_graph2 = delete.vertices(rt_graph2, V(rt_graph2)[ degree(rt_graph2)<10 ])
V(rt_graph2)$color =  rgb(1,0,0,.1)
V(rt_graph2)$size = 2
V(rt_graph2)$label.cex .8
V(rt_graph2)$label[degree(rt_graph2)>30] = V(rt_graph2)$name[degree(rt_graph2)>30]
V(rt_graph2)$label.cex = .5
E(rt_graph2)$width = .3
E(rt_graph2)$color = rgb(.5,.5,0,.1)
# par(bg="white", mar=c(1,1,1,1))
plot.igraph(rt_graph2, layout=layout.fruchterman.reingold, main="Whole Retweet Network")
evcent(rt_graph2)
cent<-data.frame(bet=betweenness(rt_graph),eig=evcent(rt_graph)$vector)
res<-lm(eig~bet,data=cent)$residuals
cent<-transform(cent,res=res)
set.seed(1405)
key.accounts<-ggplot(cent,aes(x=bet,y=eig,
label=rownames(cent),colour=res)) +
xlab("Betweenness Centrality") +
ylab("Eigenvector Centrality") +
labs(title="Key Twitter Accounts") +
theme_bw() +
geom_text(size=9, position = position_jitter(width = 500))
key.accounts
require(ggplot2)
cent<-data.frame(bet=betweenness(rt_graph),eig=evcent(rt_graph)$vector)
res<-lm(eig~bet,data=cent)$residuals
cent<-transform(cent,res=res)
set.seed(1405)
key.accounts<-ggplot(cent,aes(x=bet,y=eig,
label=rownames(cent),colour=res)) +
xlab("Betweenness Centrality") +
ylab("Eigenvector Centrality") +
labs(title="Key Twitter Accounts") +
theme_bw() +
geom_text(size=9, position = position_jitter(width = 500))
key.accounts
key.accounts<-ggplot(cent,aes(x=bet,y=eig,
label=rownames(cent),colour=res)) +
xlab("Betweenness Centrality") +
ylab("Eigenvector Centrality") +
labs(title="Key Twitter Accounts") +
theme_bw() +
geom_text(size=7, position = position_jitter(width = 500))
key.accounts
key.accounts<-ggplot(cent,aes(x=bet,y=eig,
label=rownames(cent),colour=res)) +
xlab("Betweenness Centrality") +
ylab("Eigenvector Centrality") +
labs(title="Key Twitter Accounts") +
theme_bw() +
geom_text(size=6, position = position_jitter(width = 500))
key.accounts
evcent(rt_graph2)>.25
evcent(rt_graph2)$vector
rt_graph2 = graph.edgelist(as.matrix(el.df), directed=TRUE)
V(rt_graph2)$name[evcent(rt_graph2)$vector>.25]
set.seed(1405)
key.accounts<-ggplot(cent,aes(x=bet,y=eig,
label=rownames(cent),colour=res)) +
xlab("Betweenness Centrality") +
ylab("Eigenvector Centrality") +
labs(title="Key Twitter Accounts") +
theme_bw() +
geom_text(size=6, position = position_jitter(width = 500, height=500))
key.accounts
key.accounts<-ggplot(cent,aes(x=bet,y=eig,
label=rownames(cent),colour=res)) +
xlab("Betweenness Centrality") +
ylab("Eigenvector Centrality") +
labs(title="Key Twitter Accounts") +
theme_bw() +
geom_text(size=6, position = position_jitter(width = 500, height=.1))
key.accounts
set.seed(1405)
key.accounts<-ggplot(cent,aes(x=bet,y=eig,
label=rownames(cent),colour=res)) +
xlab("Betweenness Centrality") +
ylab("Eigenvector Centrality") +
labs(title="Key Twitter Accounts") +
theme_bw() +
geom_text(size=6, position = position_jitter(width = 500, height=.15))
key.accounts
set.seed(1405)
key.accounts<-ggplot(cent,aes(x=bet,y=eig,
label=rownames(cent),colour=res)) +
xlab("Betweenness Centrality") +
ylab("Eigenvector Centrality") +
labs(title="Key Twitter Accounts") +
theme_bw() +
geom_text(size=6, position = position_jitter(width = 500, height=.15))
key.accounts
set.seed(1456)
key.accounts<-ggplot(cent,aes(x=bet,y=eig,
label=rownames(cent),colour=res)) +
xlab("Betweenness Centrality") +
ylab("Eigenvector Centrality") +
labs(title="Key Twitter Accounts") +
theme_bw() +
geom_text(size=6, position = position_jitter(width = 500, height=.15))
key.accounts
set.seed(1256)
key.accounts<-ggplot(cent,aes(x=bet,y=eig,
label=rownames(cent),colour=res)) +
xlab("Betweenness Centrality") +
ylab("Eigenvector Centrality") +
labs(title="Key Twitter Accounts") +
theme_bw() +
geom_text(size=6, position = position_jitter(width = 500, height=.2))
key.accounts
set.seed(1296)
key.accounts<-ggplot(cent,aes(x=bet,y=eig,
label=rownames(cent),colour=res)) +
xlab("Betweenness Centrality") +
ylab("Eigenvector Centrality") +
labs(title="Key Twitter Accounts") +
theme_bw() +
geom_text(size=6, position = position_jitter(width = 500, height=.15))
key.accounts
set.seed(1296)
key.accounts<-ggplot(cent,aes(x=bet,y=eig,
label=rownames(cent),colour=res)) +
xlab("Betweenness Centrality") +
ylab("Eigenvector Centrality") +
labs(title="Key Twitter Accounts") +
theme_bw() +
geom_text(size=6, position = position_jitter(width = 400, height=.15))
key.accounts
set.seed(1196)
key.accounts<-ggplot(cent,aes(x=bet,y=eig,
label=rownames(cent),colour=res)) +
xlab("Betweenness Centrality") +
ylab("Eigenvector Centrality") +
labs(title="Key Twitter Accounts") +
theme_bw() +
geom_text(size=6, position = position_jitter(width = 400, height=.15))
key.accounts
set.seed(996)
key.accounts<-ggplot(cent,aes(x=bet,y=eig,
label=rownames(cent),colour=res)) +
xlab("Betweenness Centrality") +
ylab("Eigenvector Centrality") +
labs(title="Key Twitter Accounts") +
theme_bw() +
geom_text(size=6, position = position_jitter(width = 400, height=.1))
key.accounts
set.seed(444)
key.accounts<-ggplot(cent,aes(x=bet,y=eig,
label=rownames(cent),colour=res)) +
xlab("Betweenness Centrality") +
ylab("Eigenvector Centrality") +
labs(title="Key Twitter Accounts") +
theme_bw() +
geom_text(size=6, position = position_jitter(width = 300, height=.15))
key.accounts
set.seed(4474)
key.accounts<-ggplot(cent,aes(x=bet,y=eig,
label=rownames(cent),colour=res)) +
xlab("Betweenness Centrality") +
ylab("Eigenvector Centrality") +
labs(title="Key Twitter Accounts") +
theme_bw() +
geom_text(size=6, position = position_jitter(width = 300, height=.15))
key.accounts
set.seed(4074)
key.accounts<-ggplot(cent,aes(x=bet,y=eig,
label=rownames(cent),colour=res)) +
xlab("Betweenness Centrality") +
ylab("Eigenvector Centrality") +
labs(title="Key Twitter Accounts") +
theme_bw() +
geom_text(size=6, position = position_jitter(width = 300, height=.15))
key.accounts
rt_graph2 = graph.edgelist(as.matrix(el.df), directed=TRUE)
# Make and plot graph
rt_graph2 = delete.vertices(rt_graph2, V(rt_graph2)[ degree(rt_graph2)==0 ])
V(rt_graph2)$color =  rgb(1,0,0,.1)
V(rt_graph2)$size = 2
V(rt_graph2)$label.cex .8
V(rt_graph2)$label[evcent(rt_graph2)$vector>.25] = V(rt_graph2)$name[evcent(rt_graph2)$vector>.25]
V(rt_graph2)$label.cex = .5
E(rt_graph2)$width = .3
E(rt_graph2)$color = rgb(.5,.5,0,.1)
# par(bg="white", mar=c(1,1,1,1))
plot.igraph(rt_graph2, layout=layout.fruchterman.reingold, main="Whole Retweet Network")
rt_graph2 = graph.edgelist(as.matrix(el.df), directed=TRUE)
# Make and plot graph
rt_graph2 = delete.vertices(rt_graph2, V(rt_graph2)[ degree(rt_graph2)<3 ])
V(rt_graph2)$color =  rgb(1,0,0,.1)
V(rt_graph2)$size = 2
V(rt_graph2)$label.cex .8
V(rt_graph2)$label[evcent(rt_graph2)$vector>.25] = V(rt_graph2)$name[evcent(rt_graph2)$vector>.25]
V(rt_graph2)$label.cex = .5
E(rt_graph2)$width = .3
E(rt_graph2)$color = rgb(.5,.5,0,.1)
# par(bg="white", mar=c(1,1,1,1))
plot.igraph(rt_graph2, layout=layout.fruchterman.reingold, main="Whole Retweet Network")
rt_graph2 = graph.edgelist(as.matrix(el.df), directed=TRUE)
# Make and plot graph
rt_graph2 = delete.vertices(rt_graph2, V(rt_graph2)[ degree(rt_graph2)<5 ])
V(rt_graph2)$color =  rgb(1,0,0,.1)
V(rt_graph2)$size = 2
V(rt_graph2)$label.cex .8
V(rt_graph2)$label[evcent(rt_graph2)$vector>.25] = V(rt_graph2)$name[evcent(rt_graph2)$vector>.25]
V(rt_graph2)$label.cex = .5
E(rt_graph2)$width = .3
E(rt_graph2)$color = rgb(.5,.5,0,.1)
# par(bg="white", mar=c(1,1,1,1))
plot.igraph(rt_graph2, layout=layout.fruchterman.reingold, main="Whole Retweet Network")
rt_graph2 = graph.edgelist(as.matrix(el.df), directed=TRUE)
# Make and plot graph
rt_graph2 = delete.vertices(rt_graph2, V(rt_graph2)[ degree(rt_graph2)<5 ])
V(rt_graph2)$color =  rgb(1,0,0,.1)
V(rt_graph2)$size = 2
V(rt_graph2)$label.cex .8
V(rt_graph2)$label[evcent(rt_graph2)$vector>.25] = V(rt_graph2)$name[evcent(rt_graph2)$vector>.25]
V(rt_graph2)$label.cex = 1
E(rt_graph2)$width = .3
E(rt_graph2)$color = rgb(.5,.5,0,.1)
# par(bg="white", mar=c(1,1,1,1))
plot.igraph(rt_graph2, layout=layout.fruchterman.reingold, main="Whole Retweet Network")
rt_graph2 = graph.edgelist(as.matrix(el.df), directed=TRUE)
# Make and plot graph
rt_graph2 = delete.vertices(rt_graph2, V(rt_graph2)[ degree(rt_graph2)<5 ])
V(rt_graph2)$color =  rgb(1,0,0,.1)
V(rt_graph2)$size = 2
V(rt_graph2)$label.cex .8
V(rt_graph2)$label[evcent(rt_graph2)$vector>.3] = V(rt_graph2)$name[evcent(rt_graph2)$vector>.3]
V(rt_graph2)$label.cex = 2
E(rt_graph2)$width = .3
E(rt_graph2)$color = rgb(.5,.5,0,.1)
# par(bg="white", mar=c(1,1,1,1))
plot.igraph(rt_graph2, layout=layout.fruchterman.reingold, main="Whole Retweet Network")
rt_graph2 = graph.edgelist(as.matrix(el.df), directed=TRUE)
# Make and plot graph
rt_graph2 = delete.vertices(rt_graph2, V(rt_graph2)[ degree(rt_graph2)<5 ])
V(rt_graph2)$color =  rgb(1,0,0,.1)
V(rt_graph2)$size = 2
V(rt_graph2)$label.cex .8
V(rt_graph2)$label[evcent(rt_graph2)$vector>.3] = V(rt_graph2)$name[evcent(rt_graph2)$vector>.3]
V(rt_graph2)$label.cex = 1.2
E(rt_graph2)$width = .3
E(rt_graph2)$color = rgb(.5,.5,0,.1)
par(bg="white", mar=c(1,1,1,1))
plot.igraph(rt_graph2, layout=layout.fruchterman.reingold, main="Whole Retweet Network")
rt_graph2 = graph.edgelist(as.matrix(el.df), directed=TRUE)
# Make and plot graph
rt_graph2 = delete.vertices(rt_graph2, V(rt_graph2)[ degree(rt_graph2)<5 ])
V(rt_graph2)$color =  rgb(1,0,0,.1)
V(rt_graph2)$size = 2
V(rt_graph2)$label.cex .8
V(rt_graph2)$label[evcent(rt_graph2)$vector>.35] = V(rt_graph2)$name[evcent(rt_graph2)$vector>.35]
V(rt_graph2)$label.cex = 1.2
E(rt_graph2)$width = .3
E(rt_graph2)$color = rgb(.5,.5,0,.1)
par(bg="white", mar=c(1,1,1,1))
plot.igraph(rt_graph2, layout=layout.fruchterman.reingold, main="Whole Retweet Network")
rt_graph2 = graph.edgelist(as.matrix(el.df), directed=TRUE)
# Make and plot graph
rt_graph2 = delete.vertices(rt_graph2, V(rt_graph2)[ degree(rt_graph2)<10 ])
V(rt_graph2)$color =  rgb(1,0,0,.1)
V(rt_graph2)$size = 2
V(rt_graph2)$label.cex .8
V(rt_graph2)$label[evcent(rt_graph2)$vector>.3] = V(rt_graph2)$name[evcent(rt_graph2)$vector>.3]
V(rt_graph2)$label.cex = 1.2
E(rt_graph2)$width = .3
E(rt_graph2)$color = rgb(.5,.5,0,.1)
par(bg="white", mar=c(1,1,1,1))
plot.igraph(rt_graph2, layout=layout.fruchterman.reingold, main="Whole Retweet Network")
fc <- walktrap.community(rt_graph2)
colors <- rainbow(max(membership(fc)))
plot(rt_graph2,vertex.color=colors[membership(fc)],
layout=layout.fruchterman.reingold)
rt_graph2 = graph.edgelist(as.matrix(el.df), directed=TRUE)
# Make and plot graph
rt_graph2 = delete.vertices(rt_graph2, V(rt_graph2)[ degree(rt_graph2)<10 ])
V(rt_graph2)$color =  rgb(1,0,0,.1)
V(rt_graph2)$size = 2
V(rt_graph2)$label[evcent(rt_graph2)$vector>.3] = V(rt_graph2)$name[evcent(rt_graph2)$vector>.3]
V(rt_graph2)$label.cex = 1.2
E(rt_graph2)$width = .3
# E(rt_graph2)$color = rgb(.5,.5,0,.1)
fc <- walktrap.community(rt_graph2)
colors <- rainbow(max(membership(fc)))
plot(rt_graph2,vertex.color=colors[membership(fc)],
layout=layout.fruchterman.reingold)
?walktrap.community
plot(rt_graph2,vertex.color=colors[membership(fc)],
layout=layout.fruchterman.reingold)
rt_graph2 = graph.edgelist(as.matrix(el.df), directed=TRUE)
# Make and plot graph
rt_graph2 = delete.vertices(rt_graph2, V(rt_graph2)[ degree(rt_graph2)<15 ])
V(rt_graph2)$color =  rgb(1,0,0,.1)
V(rt_graph2)$size = 2
V(rt_graph2)$label[evcent(rt_graph2)$vector>.3] = V(rt_graph2)$name[evcent(rt_graph2)$vector>.3]
V(rt_graph2)$label.cex = 1.2
E(rt_graph2)$width = .3
E(rt_graph2)$color = rgb(.5,.5,0,.1)
par(bg="white", mar=c(1,1,1,1))
plot.igraph(rt_graph2, layout=layout.fruchterman.reingold, main="Whole Retweet Network")
key.accounts
rt_graph2 = graph.edgelist(as.matrix(el.df), directed=TRUE)
# Make and plot graph
rt_graph2 = delete.vertices(rt_graph2, V(rt_graph2)[ degree(rt_graph2)<15 ])
V(rt_graph2)$color =  rgb(1,0,0,.1)
V(rt_graph2)$size = 2
V(rt_graph2)$label[evcent(rt_graph2)$vector>.3] = V(rt_graph2)$name[evcent(rt_graph2)$vector>.3]
V(rt_graph2)$label[betweenness(rt_graph2)>2000] = V(rt_graph2)$name[betweenness(rt_graph2)>2000]
V(rt_graph2)$label.cex = 1.2
E(rt_graph2)$width = .3
E(rt_graph2)$color = rgb(.5,.5,0,.1)
par(bg="white", mar=c(1,1,1,1))
plot.igraph(rt_graph2, layout=layout.fruchterman.reingold, main="Whole Retweet Network")
rt_graph2 = graph.edgelist(as.matrix(el.df), directed=TRUE)
# Make and plot graph
rt_graph2 = delete.vertices(rt_graph2, V(rt_graph2)[ degree(rt_graph2)<5 ])
V(rt_graph2)$color[betweenness(rt_graph2)>2000] =  blue
V(rt_graph2)$color[evcent(rt_graph2)$vector>.3] =  red
V(rt_graph2)$size = 2
V(rt_graph2)$label[evcent(rt_graph2)$vector>.3] = V(rt_graph2)$name[evcent(rt_graph2)$vector>.3]
V(rt_graph2)$label[betweenness(rt_graph2)>2000] = V(rt_graph2)$name[betweenness(rt_graph2)>2000]
V(rt_graph2)$label.cex = 1.2
E(rt_graph2)$width = .3
E(rt_graph2)$color = rgb(.5,.5,0,.1)
par(bg="white", mar=c(1,1,1,1))
plot.igraph(rt_graph2, layout=layout.fruchterman.reingold, main="Whole Retweet Network")
rt_graph2 = graph.edgelist(as.matrix(el.df), directed=TRUE)
# Make and plot graph
rt_graph2 = delete.vertices(rt_graph2, V(rt_graph2)[ degree(rt_graph2)<5 ])
V(rt_graph2)$color[betweenness(rt_graph2)>2000] =  rgb(1,1,0,.1)
V(rt_graph2)$color[evcent(rt_graph2)$vector>.3] =  rgb(0,0,0,.1)
V(rt_graph2)$size = 2
V(rt_graph2)$label[evcent(rt_graph2)$vector>.3] = V(rt_graph2)$name[evcent(rt_graph2)$vector>.3]
V(rt_graph2)$label[betweenness(rt_graph2)>2000] = V(rt_graph2)$name[betweenness(rt_graph2)>2000]
V(rt_graph2)$label.cex = 1.2
E(rt_graph2)$width = .3
E(rt_graph2)$color = rgb(.5,.5,0,.1)
par(bg="white", mar=c(1,1,1,1))
plot.igraph(rt_graph2, layout=layout.fruchterman.reingold, main="Whole Retweet Network")
?rgb
rt_graph2 = graph.edgelist(as.matrix(el.df), directed=TRUE)
# Make and plot graph
rt_graph2 = delete.vertices(rt_graph2, V(rt_graph2)[ degree(rt_graph2)==0 ])
V(rt_graph2)$color[betweenness(rt_graph2)>2000] =  rgb(1,0,0,1)
V(rt_graph2)$color[evcent(rt_graph2)$vector>.3] =  rgb(0,1,0,1)
V(rt_graph2)$size = 2
V(rt_graph2)$label[evcent(rt_graph2)$vector>.3] = V(rt_graph2)$name[evcent(rt_graph2)$vector>.3]
V(rt_graph2)$label[betweenness(rt_graph2)>2000] = V(rt_graph2)$name[betweenness(rt_graph2)>2000]
V(rt_graph2)$label.cex = 1.2
E(rt_graph2)$width = .3
E(rt_graph2)$color = rgb(.5,.5,0,.1)
par(bg="white", mar=c(1,1,1,1))
plot.igraph(rt_graph2, layout=layout.fruchterman.reingold, main="Whole Retweet Network")
rt_graph2 = graph.edgelist(as.matrix(el.df), directed=TRUE)
# Make and plot graph
rt_graph2 = delete.vertices(rt_graph2, V(rt_graph2)[ degree(rt_graph2)<=1 ])
V(rt_graph2)$color[betweenness(rt_graph2)>2000] =  rgb(255,255,255,1)
V(rt_graph2)$color[evcent(rt_graph2)$vector>.3] =  rgb(255,0,0,1)
V(rt_graph2)$size = 2
V(rt_graph2)$label[evcent(rt_graph2)$vector>.3] = V(rt_graph2)$name[evcent(rt_graph2)$vector>.3]
V(rt_graph2)$label[betweenness(rt_graph2)>2000] = V(rt_graph2)$name[betweenness(rt_graph2)>2000]
V(rt_graph2)$label.cex = 1.2
E(rt_graph2)$width = .3
E(rt_graph2)$color = rgb(.5,.5,0,.1)
par(bg="white", mar=c(1,1,1,1))
plot.igraph(rt_graph2, layout=layout.fruchterman.reingold, main="Whole Retweet Network")
rt_graph2 = graph.edgelist(as.matrix(el.df), directed=TRUE)
# Make and plot graph
rt_graph2 = delete.vertices(rt_graph2, V(rt_graph2)[ degree(rt_graph2)<1 ])
V(rt_graph2)$color[betweenness(rt_graph2)>2000] =  rgb(1,1,1,1)
V(rt_graph2)$color[evcent(rt_graph2)$vector>.3] =  rgb(1,0,0,1)
V(rt_graph2)$size = 2
V(rt_graph2)$label[evcent(rt_graph2)$vector>.3] = V(rt_graph2)$name[evcent(rt_graph2)$vector>.3]
V(rt_graph2)$label[betweenness(rt_graph2)>2000] = V(rt_graph2)$name[betweenness(rt_graph2)>2000]
V(rt_graph2)$label.cex = 1.2
E(rt_graph2)$width = .3
E(rt_graph2)$color = rgb(.5,.5,0,.1)
par(bg="white", mar=c(1,1,1,1))
plot.igraph(rt_graph2, layout=layout.fruchterman.reingold, main="Whole Retweet Network")
?V
par(bg="white", mar=c(1,1,1,1))
plot.igraph(rt_graph2, layout=layout.circle, main="Whole Retweet Network")
?layout
plot.igraph(rt_graph2, layout=layout.auto, main="Whole Retweet Network")
plot.igraph(rt_graph2, layout=layout.sphere, main="Whole Retweet Network")
plot.igraph(rt_graph2, layout=layout.fruchterman.reingold, vertex.label.color= "white",
main="Whole Retweet Network")
rt_graph2 = delete.vertices(rt_graph2, V(rt_graph2)[ degree(rt_graph2)<=1 ])
V(rt_graph2)$color[betweenness(rt_graph2)>2000] =  rgb(1,0,0,1)
V(rt_graph2)$color[evcent(rt_graph2)$vector>.3] =  rgb(0,1,0,1)
V(rt_graph2)$size = 2
V(rt_graph2)$label[evcent(rt_graph2)$vector>.3] = V(rt_graph2)$name[evcent(rt_graph2)$vector>.3]
V(rt_graph2)$label[betweenness(rt_graph2)>2000] = V(rt_graph2)$name[betweenness(rt_graph2)>2000]
V(rt_graph2)$label.cex = 1.2
E(rt_graph2)$width = .3
E(rt_graph2)$color = rgb(.5,.5,0,.1)
par(bg="white", mar=c(1,1,1,1))
plot.igraph(rt_graph2, layout=layout.fruchterman.reingold, vertex.label.color= "white",
main="Whole Retweet Network")
rt_graph2 = graph.edgelist(as.matrix(el.df), directed=TRUE)
# Make and plot graph
rt_graph2 = delete.vertices(rt_graph2, V(rt_graph2)[ degree(rt_graph2)<=1 ])
V(rt_graph2)$color[betweenness(rt_graph2)>2000] =  rgb(1,0,0,1)
V(rt_graph2)$color[evcent(rt_graph2)$vector>.3] =  rgb(0,1,0,1)
V(rt_graph2)$size = 2
V(rt_graph2)$label[evcent(rt_graph2)$vector>.3] = V(rt_graph2)$name[evcent(rt_graph2)$vector>.3]
V(rt_graph2)$label[betweenness(rt_graph2)>2000] = V(rt_graph2)$name[betweenness(rt_graph2)>2000]
V(rt_graph2)$label.cex = 1.2
E(rt_graph2)$width = .3
E(rt_graph2)$color = rgb(.5,.5,0,.1)
par(bg="white", mar=c(1,1,1,1))
plot.igraph(rt_graph2, layout=layout.fruchterman.reingold, vertex.label.color= "white",
main="Whole Retweet Network")
rt_graph2 = graph.edgelist(as.matrix(el.df), directed=TRUE)
# Make and plot graph
rt_graph2 = delete.vertices(rt_graph2, V(rt_graph2)[ degree(rt_graph2)==0 ])
V(rt_graph2)$color[betweenness(rt_graph2)>2000] =  rgb(1,0,0,1)
V(rt_graph2)$color[evcent(rt_graph2)$vector>.3] =  rgb(0,1,0,1)
V(rt_graph2)$size = 2
V(rt_graph2)$label[evcent(rt_graph2)$vector>.3] = V(rt_graph2)$name[evcent(rt_graph2)$vector>.3]
V(rt_graph2)$label[betweenness(rt_graph2)>2000] = V(rt_graph2)$name[betweenness(rt_graph2)>2000]
V(rt_graph2)$label.cex = 1.2
E(rt_graph2)$width = .3
E(rt_graph2)$color = rgb(.5,.5,0,.1)
par(bg="white", mar=c(1,1,1,1))
plot.igraph(rt_graph2, layout=layout.fruchterman.reingold, vertex.label.color= "white",
main="Whole Retweet Network")
